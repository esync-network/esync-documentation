"use strict";(self.webpackChunkdocs_esync_network=self.webpackChunkdocs_esync_network||[]).push([[288],{3972:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7624),o=n(2172);const i={sidebar_position:6},r="Quick Command Reference",s={id:"validators/quick_reference",title:"Quick Command Reference",description:"Start the node",source:"@site/docs/validators/quick_reference.md",sourceDirName:"validators",slug:"/validators/quick_reference",permalink:"/docs/validators/quick_reference",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"validators",previous:{title:"Operation and Maintenance",permalink:"/docs/validators/node_maintenance"},next:{title:"Log Messages",permalink:"/docs/validators/log_messages"}},d={},c=[{value:"Start the node",id:"start-the-node",level:2},{value:"Stop the node",id:"stop-the-node",level:2},{value:"Restart the node",id:"restart-the-node",level:2},{value:"Show Logs",id:"show-logs",level:2},{value:"Connect to Geth",id:"connect-to-geth",level:2},{value:"Clean/Reset/Reinitialize the eth1 database",id:"cleanresetreinitialize-the-eth1-database",level:2},{value:"Clean/Reset/Reinitialize the eth2/beacon chain database",id:"cleanresetreinitialize-the-eth2beacon-chain-database",level:2},{value:"Import Private Key",id:"import-private-key",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,o.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"quick-command-reference",children:"Quick Command Reference"}),"\n",(0,a.jsx)(t.h2,{id:"start-the-node",children:"Start the node"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"docker-compose -f validator.docker-compose.yaml up -d\n"})}),"\n",(0,a.jsx)(t.h2,{id:"stop-the-node",children:"Stop the node"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"# 1. kill geth and beacon client (proper shutdown)\ndocker exec -it mainnet-geth-1 pkill geth\ndocker exec -it mainnet-beacon-1 pkill lighthouse\n\n# 2. shutdown the container\ndocker-compose -f validator.docker-compose.yaml down\n"})}),"\n",(0,a.jsx)(t.h2,{id:"restart-the-node",children:"Restart the node"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"# 1. kill geth (proper shutdown)\ndocker exec -it mainnet-geth-1 pkill geth\ndocker exec -it mainnet-beacon-1 pkill lighthouse\n\n# 2. restart the container\ndocker-compose -f validator.docker-compose.yaml restart\n"})}),"\n",(0,a.jsx)(t.h2,{id:"show-logs",children:"Show Logs"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"docker logs --tail 10 -f mainnet-geth-1\ndocker logs --tail 10 -f mainnet-beacon-1\ndocker logs --tail 10 -f mainnet-validator-1\n"})}),"\n",(0,a.jsx)(t.h2,{id:"connect-to-geth",children:"Connect to Geth"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"docker exec -it mainnet-geth-1 geth attach\n"})}),"\n",(0,a.jsx)(t.h2,{id:"cleanresetreinitialize-the-eth1-database",children:"Clean/Reset/Reinitialize the eth1 database"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"DATADIR=/var/lib/esync/mainnet\ndocker exec -it mainnet-geth-1 pkill geth\ndocker exec -it mainnet-beacon-1 pkill lighthouse\ndocker-compose -f $DATADIR/validator.docker-compose.yaml down\n\ndocker run -it -v $DATADIR/datadir-eth1:/root/.ethereum -e POD_NAME --entrypoint geth ecredits/node:latest removedb\n\ndocker-compose -f $DATADIR/validator.docker-compose.yaml up -d\n"})}),"\n",(0,a.jsx)(t.h2,{id:"cleanresetreinitialize-the-eth2beacon-chain-database",children:"Clean/Reset/Reinitialize the eth2/beacon chain database"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"DATADIR=/var/lib/esync/mainnet\ndocker exec -it mainnet-beacon-1 pkill lighthouse\ndocker exec -it mainnet-validator-1 pkill lighthouse\n\nrm -R $DATADIR/datadir-eth2\n\ndocker-compose -f $DATADIR/validator.docker-compose.yaml up -d\n"})}),"\n",(0,a.jsx)(t.h2,{id:"import-private-key",children:"Import Private Key"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'docker run --rm -it -v "$datadir/gened/validator_keys":/keys -v "$datadir/datadir-eth2-validator":/root/.lighthouse -v "$passwordpath":/password.cfg --name validatorimport ecredits/lighthouse:latest lighthouse --network $network account validator import --datadir /root/.lighthouse --directory /keys --reuse-password --password-file /password.cfg\n\n'})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"$datadir/gened/validator_keys"})," points to the directory that holds the the keys."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"$datadir/datadir-eth2-validator"})," points to the datadir of the validator."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:'$passwordpath":/password.cfg'})," points to the password file."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"$network"})," should be the same docker network as your beacon node is in."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.M)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},2172:(e,t,n)=>{n.d(t,{I:()=>s,M:()=>r});var a=n(1504);const o={},i=a.createContext(o);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);